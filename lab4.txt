function GetSortPosts()
{
    fetch('https://jsonplaceholder.typicode.com/posts')
  .then(response => response.json())
  .then(posts => {
    const sortPosts = posts.sort((a,b)=>b.title.length - a.title.length);
    console.log(sortPosts);
  });
} 
GetSortPosts();


function GetSortComments()
{
    fetch('https://jsonplaceholder.typicode.com/comments')
  .then(response => response.json())
  .then(comments => {
    const sortComments = comments.sort((a,b) => a.name.length - b.name.length);
    console.log(sortComments);
  });
}
GetSortComments();


function GetUsers()
{
    new Promise((resolve, reject) =>{
        fetch('https://jsonplaceholder.typicode.com/users')
        .then(response => response.json())
        .then(users => {
            const UsersParametr = users.map(user=>({
                id: user.id,
                name: user.name,
                username: user.username,
                email: user.email,
                phone: user.phone
            }));
            console.log(UsersParametr);
        });
    });
}
GetUsers();


function GetTodos()
{
    new Promise((resolve, reject) =>{
        fetch('https://jsonplaceholder.typicode.com/todos')
        .then(response => response.json())
        .then(todos => {
            const FilterTodos = todos.filter(todo => !todo.completed);
            console.log(FilterTodos);
        });
    });
}
GetTodos();


async function GetSortPostsAwait()
{
    const response = await fetch('https://jsonplaceholder.typicode.com/posts');
    const posts = await response.json();
    const sortPosts = posts.sort((a,b)=>b.title.length - a.title.length);
    console.log(sortPosts);
} 
GetSortPostsAwait();


async function GetSortCommentsAwait()
{
    const response = await fetch('https://jsonplaceholder.typicode.com/comments');
    const comments = await response.json();
    const sortComments = posts.sort((a,b)=>a.title.length - b.title.length);
    console.log(sortComments);
} 
GetSortCommentsAwait();


async function GetUsersAwait()
{
    const response = await fetch('https://jsonplaceholder.typicode.com/users');
    const users = await response.json();
    const UsersParametr = users.map(user=>({
        id: user.id,
        name: user.name,
        username: user.username,
        email: user.email,
        phone: user.phone
        }));
    console.log(UsersParametr);
}
GetUsersAwait();


async function GetTodosAwait()
{
    const response = await fetch('https://jsonplaceholder.typicode.com/todos');
    const todos = await response.json();
    const FilterTodos = todos.filter(todo => !todo.completed);
    console.log(FilterTodos);
}
GetTodosAwait();
